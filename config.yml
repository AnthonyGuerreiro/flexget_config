secrets: secrets.yml
templates:
  global:
    no_entries_ok: yes
    pathscrub: windows
    free_space:
      path: '/{{secrets.folder.root}}'
      space: 5000
    # Requires log_filter plugin
    log_filter:
      task:
        - marked seen
        - because quality already downloaded
        - because episode has already been downloaded
        - Task does not have any
      move:
        - left because it exceeds safety value
        - does not exists (anymore)
      urlrewriter:
        - URL rewritten to
      enzyme.mkv:
        - Reading
        - Processing
      enzyme.parsers.ebml.core:
        - ignored
        - Maximum level
      subliminal.video:
        - Scanning video
      parser_internal:
        - appears to be an episode pack
      content_size:
        - rejecting
      search_rss:
        - Error
      assume_quality:
        - ""
      utils.requests:
        - Waiting

##### Series config
#
  series:
    thetvdb_lookup: yes
    include: series.yml
    configure_series:
      from:
        text:
          url: 'file://{{secrets.list.series}}'
          entry:
            title: "(.*)"
            url: "(.*)"
      settings:
        identified_by: ep
        timeframe: 15 minutes
        target: hdtv 720p !h265
        quality: webrip+ 720p !h265
        propers: 16 hours
        specials: no
    content_size:
      min: 350
    content_filter:
      require:
        - '*.mkv'

##### Anime config
#
  anime:
    include: anime.yml
    series:
      settings:
        episodes:
          identified_by: sequence
          quality: 720p !10bit !h265
          special_ids:
            - OVA
        movies:
          identified_by: sequence
          quality: 720p+ !10bit !h265
    assume_quality: 720p

##### Movies config
#
  movies-1080p:
    tmdb_lookup: yes
    movie_queue: accept
    quality: 1080p webdl+ !h265
    content_size:
      min: 1000
      max: 6000

  movies-720p:
    tmdb_lookup: yes
    movie_queue: accept
    quality: 720p webdl+ !h265
    content_size:
      min: 500
      max: 3000

##### Pushbullet config
#
  pushbullet:
    pushbullet:
      apikey: '{{secrets.pushbullet.api}}'
      title: "[Flexget] {{task}}"
      body: "{{title}}"

##### Common rejections
#
  reject:
    regexp:
      reject:
        - (s|d)ub(s|bed|lado|titulado)?\b
        - \bdual\b
        - \b3d\b
        - \b(fr)(ench)?\b
        - \b(ita)(lian)?\b
        - \b(spa)(nish)?\b
        - \b(ger)(man)?\b
        - \bcastellano\b
        - \brus(sian)?\b
    content_filter:
      reject:
        - '*.rar'
        - '*.zip'

##### Common torrents config
#
  torrents:
    torrent_alive:
      min_seeds: 10
      reject_for: 15 minutes
    magnets: no
    # Might need to disable if you are getting errors connecting to https sources
    # Can remove if you upgrade to python 2.7.9+ or install requests[security]
    #verify_ssl_certificates: no
    domain_delay:
      torrentz.eu: 1 seconds
      unblocked.la: 1 seconds
      nyaa.se: 1 seconds

##### Transmission series config
#
  transmission:
    transmission:
      host: '{{secrets.transmission.host}}'
      port: 9091
      username: '{{secrets.transmission.user}}'
      password: '{{secrets.transmission.pass}}'
      main_file_only: yes
      include_subs: yes
      skip_files:
        - '*.nfo'
        - '*.sfv'
        - '*.txt'
        - '*[sS]ample*'
        - '*[tT]railer*'

##### Transmission series config
#
  transmission-series:
    transmission:
      content_filename: "{{tvdb_series_name|default(series_name)|pathscrub}} - {{tvdb_ep_id|default(series_id)}}{% if tvdb_ep_name|default(False) %}: - {{tvdb_ep_name|pathscrub}}{% endif %}{% if quality|default(False) %}: - [{{quality}}]{% endif %}"
      path: "/{{secrets.folder.root}}{{secrets.folder.downseries}}{{tvdb_series_name|default(series_name)|pathscrub}}/"

##### Transmission movies config
#
  transmission-movies:
    transmission:
      content_filename: "{{tmdb_name|pathscrub}} ({{tmdb_year}}){% if quality|default(False) %}: - [{{quality}}]{% endif %}"
      path: "/{{secrets.folder.root}}{{secrets.folder.downmovies}}{{movie_name|pathscrub}}"

##### Transmission anime config
#
  transmission-anime:
    transmission:
      content_filename: "{{series_name}} - ep{{series_id}} - [{{quality}}]"
      path: "/{{secrets.folder.root}}{{secrets.folder.downanime}}{{series_name|pathscrub}}/"

##### Disable builtins for some tasks
#
  disable-seen-retry:
    disable:
      - seen
      - seen_info_hash
      - retry_failed

##### Series metainfo mainly for move and update tasks
#
  series-metainfo:
    metainfo_series: yes
    thetvdb_lookup: yes

##### Movies metainfo mainly for move and update tasks
#
  movies-metainfo:
    tmdb_lookup: yes
    parsing:
      movie: guessit

tasks:

##### Populates the series database with the files on the library, to avoid duplicate downloads
#
  populate-series-db:
    priority: 1
    interval: 4 hour
    template:
      - series-metainfo
    seen: local
    filesystem:
      path: '/{{secrets.folder.root}}{{secrets.folder.series}}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    configure_series:
      from:
        filesystem:
          path: '/{{secrets.folder.root}}{{secrets.folder.series}}'
          retrieve: dirs
      settings:
        tracking: no


##### Fetch, format and output trakt series list to temp file
#
  fetch-series:
    priority: 3
    disable: builtins
    template:
      - series-metainfo
    trakt_list:
      account: '{{secrets.trakt.account}}'
      list: '{{secrets.trakt.series}}'
      type: shows
    accept_all: yes
    set:
      title: "{{tvdb_series_name|escape|replace('&#39;', '')}}"
    exec:
      on_start:
        phase: rm -f '{{secrets.list.series}}' && touch '{{secrets.list.series}}'
      on_output:
        for_entries: echo "{{title}}" >> '{{secrets.list.series}}'


##### Download episodes from manually downloaded torrents
#
  download-series-manual:
    priority: 4
    manual: yes
    template:
      - disable-seen-retry
      - series-metainfo
      - transmission
      - transmission-series
      - pushbullet
    filesystem:
      path: '/{{secrets.folder.root}}{{secrets.folder.downseries}}'
      mask: '*.torrent'
    parsing:
      series: guessit
    accept_all: yes
    exec:
      on_output:
        for_accepted: rm -f "{{location}}"


##### Download episodes from RSS feeds
#
  download-series-rss:
    priority: 5
    template:
      - series
      - reject
      - torrents
      - transmission
      - transmission-series
      - pushbullet
    inputs:
      - rss:
          url: http://torrentz.eu/feedA?good&q=tv
          all_entries: yes
      - rss:
          url: https://kickass.unblocked.la/tv/?rss=1
          all_entries: yes


##### Discover and download older episodes and pilots from recently added series, set with interval to avoid spam
#
  download-series-discover:
    priority: 6
    interval: 4 hour
    template:
      - series
      - reject
      - torrents
      - transmission
      - transmission-series
      - pushbullet
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - emit_series:
            from_start: yes
      from:
        - torrentz: good
        - search_rss: https://kickass.unblocked.la/usearch/{{search_term}}/?rss=1


##### Download anime from RSS feed
#
  download-anime-rss:
    priority: 8
    template:
      - anime
      - torrents
      - transmission
      - transmission-anime
      - pushbullet
    inputs:
      - rss:
          url: http://www.nyaa.se/?page=rss&cats=1_37
          all_entries: yes


##### Discover and download anime, set with interval since it does not return results often
#
  download-anime-discover:
    priority: 9
    interval: 4 hour
    template:
      - anime
      - torrents
      - transmission
      - transmission-anime
      - pushbullet
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - emit_series:
            from_start: yes
            backfill: yes
      from:
        - nyaa:
            category: anime eng
            filter: all


##### Remove manually movies downloaded from the movie queue and trakt list
#
  clean-movie-queue:
    priority: 11
    interval: 2 hour
    template:
      - disable-seen-retry
      - movies-metainfo
    filesystem:
      path: '/{{secrets.folder.root}}{{secrets.folder.movies}}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    movie_queue: accept
    trakt_remove:
      account: '{{secrets.trakt.account}}'
      list: '{{secrets.trakt.movies}}'


##### Fill the movie queue with movies from trakt list
#
  fill-movie-queue:
    priority: 12
    trakt_list:
      account: '{{secrets.trakt.account}}'
      list: '{{secrets.trakt.movies}}'
      type: movies
      strip_dates: yes
    accept_all: yes
    movie_queue: add


##### Download movies manually downloaded torrents
#
  download-movies-manual:
    priority: 15
    manual: yes
    template:
      - disable-seen-retry
      - movies-metainfo
      - transmission
      - transmission-movies
      - pushbullet
    filesystem:
      path: '/{{secrets.folder.root}}{{secrets.folder.downmovies}}'
      mask: '*.torrent'
    accept_all: yes
    exec:
      on_output:
        for_accepted: rm -f "{{location}}"
    trakt_remove:
      account: '{{secrets.trakt.account}}'
      list: '{{secrets.trakt.movies}}'


##### Download 1080p movies
#
  download-movies-1080p:
    priority: 16
    interval: 2 hour
    template:
      - movies-1080p
      - reject
      - torrents
      - transmission
      - transmission-movies
      - pushbullet
    exists_movie:
      - '/{{secrets.folder.root}}{{secrets.folder.downmovies}}'
      - '/{{secrets.folder.root}}{{secrets.folder.movies}}'
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - emit_movie_queue: yes
      from:
        - torrentz: good
        - search_rss: https://kickass.unblocked.la/usearch/{{search_term}}/?rss=1
    trakt_remove:
      account: '{{secrets.trakt.account}}'
      list: '{{secrets.trakt.movies}}'


##### Download 720p movies if the movie is not recent
#
  download-movies-720p:
    priority: 17
    interval: 2 hour
    template:
      - movies-720p
      - reject
      - torrents
      - transmission
      - transmission-movies
      - pushbullet
    exists_movie:
      - '/{{secrets.folder.root}}{{secrets.folder.downmovies}}'
      - '/{{secrets.folder.root}}{{secrets.folder.movies}}'
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - emit_movie_queue: yes
      from:
        - torrentz: good
        - search_rss: https://kickass.unblocked.la/usearch/{{search_term}}/?rss=1
    if:
      - tmdb_year > now.year - 1: reject
    trakt_remove:
      account: '{{secrets.trakt.account}}'
      list: '{{secrets.trakt.movies}}'


##### Move series from downloads folder to respective folders, along with existing subtitles and adding the files to the subtitle queue
#
  move-series:
    priority: 21
    template:
      - disable-seen-retry
      - series-metainfo
    filesystem:
      path: '/{{secrets.folder.root}}{{secrets.folder.downseries}}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
# might be needed for some series, but causes issues with "name (year)" based series, like scandal
#    parsing:
#      series: guessit
    accept_all: yes
    regexp:
      reject:
        - \btrailer\b
        - \bsample\b
    move:
      to: "/{{secrets.folder.root}}{{secrets.folder.series}}{{tvdb_series_name|escape|replace('&#39;', '')|pathscrub}}/"
      filename: "{{tvdb_series_name|escape|replace('&#39;', '')|pathscrub}} - {{tvdb_ep_id|default(series_id)}}{% if tvdb_ep_name|default(False) %}: - {{tvdb_ep_name|pathscrub}}{% endif %}{% if quality|default(False) %}: - [{{quality}}]{% endif %}"
      along:
        - srt
        - sub
        - en.srt
        - en.sub
      clean_source: 100
    subtitle_queue:
      action: add
      path: "{{output}}"


##### Move anime from downloads folder to respective folders. Needed intermediary to provide dynamic paths to rename-anime task
#
  move-anime:
    priority: 23
    template:
      - disable-seen-retry
    filesystem:
      path: '/{{secrets.folder.root}}{{secrets.folder.downanime}}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    parsing:
      series: guessit
    metainfo_series: yes
    accept_all: yes
    move:
      to: "/{{secrets.folder.root}}{{secrets.folder.anime}}{{series_name|default(title)|pathscrub}}/"
      clean_source: 100
### REMOVE THE LINES BELOW IF YOU DONT WANT TO RENAME ANIME WITH THE EXTERNAL SCRIPT
    exec:
      on_output:
        for_accepted: echo "{{output}}" >> '{{secrets.list.animerename}}'
      on_exit:
        phase: '{{secrets.script.animerenamer}}'


##### Move movies from downloads folder to the movies folder, along with possible subtitles and adding the files to the subtitle queue
#
  move-movies:
    priority: 26
    template:
      - disable-seen-retry
      - movies-metainfo
    filesystem:
      path: '/{{secrets.folder.root}}{{secrets.folder.downmovies}}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    regexp:
      reject:
        - \btrailer\b
        - \bsample\b
    move:
      to: '/{{secrets.folder.root}}{{secrets.folder.movies}}'
      filename: "{{tmdb_name|pathscrub}} ({{tmdb_year}}){% if quality|default(False) %}: - [{{quality}}]{% endif %}"
      along:
        - srt
        - sub
        - en.srt
        - en.sub
      clean_source: 100
    subtitle_queue:
      action: add
      path: "{{output}}"


##### Download subtitles for the previously queued files
#
# Might have issues until final release of subliminal 2.0, see: http://discuss.flexget.com/t/subliminal-error/2023/
  download-subtitles:
    priority: 31
    template:
      - disable-seen-retry
    subtitle_queue: emit
    accept_all: yes
    subliminal:
      exact_match: yes
      languages:
        - eng
      providers:
        - opensubtitles
        - addic7ed
        - podnapisi
        - thesubdb
        - tvsubtitles


##### Clean finished torrents from transmission
#
  clean-transmission:
    priority: 33
    disable: details
    clean_transmission:
      host: '{{secrets.transmission.host}}'
      port: 9091
      username: '{{secrets.transmission.user}}'
      password: '{{secrets.transmission.pass}}'
      finished_for: 1 day


##### Update trakt series list from local series folders, excluding the ones that already ended
#
  update-series-list:
    priority: 41
    interval: 1 day
    template:
      - disable-seen-retry
      - series-metainfo
    plugin_priority:
      if: -251
      manipulate: -252
      trakt_add: -253
    filesystem:
      path: '/{{secrets.folder.root}}{{secrets.folder.series}}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    manipulate:
      - series_season:
          remove: yes
      - series_episode:
          remove: yes
    accept_all: yes
    if:
      - tvdb_status == 'Ended': reject
    trakt_add:
      account: '{{secrets.trakt.account}}'
      list: '{{secrets.trakt.series}}'


##### Clean the series that already ended from trakt series list
#
  clean-series-list:
    priority: 43
    interval: 1 day
    delay: 8 day
    template:
      - disable-seen-retry
      - series-metainfo
      - pushbullet
    trakt_list:
      account: '{{secrets.trakt.account}}'
      list: '{{secrets.trakt.series}}'
      type: shows
    if:
      - tvdb_status == 'Ended': accept
    trakt_remove:
      account: '{{secrets.trakt.account}}'
      list: '{{secrets.trakt.series}}'
